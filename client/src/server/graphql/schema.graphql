### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  content: String!
  createdDate: DateTime!
  id: Int!
  projectId: Int!
  user: User!
  userId: String!
}

input CommentWhereUniqueInput {
  id: Int
}

scalar DateTime

type Like {
  id: Int!
  project: Project!
  projectId: Int!
  user: User!
  userId: String!
}

input LikeWhereUniqueInput {
  id: Int
}

type Mutation {
  createProject(color: String!, title: String!): Project
}

type Project {
  color: String!
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  description: String
  iconSrc: String
  id: Int!
  isPublic: Boolean!
  likes(after: LikeWhereUniqueInput, before: LikeWhereUniqueInput, first: Int, last: Int): [Like!]!
  pageCount: Int!
  pages(after: ProjectPageWhereUniqueInput, before: ProjectPageWhereUniqueInput, first: Int, last: Int): [ProjectPage!]!
  tags: [String!]!
  title: String!
  user: User!
  userId: String!
}

input ProjectIdUserIdCompoundUniqueInput {
  id: Int!
  userId: String!
}

type ProjectPage {
  id: Int!
  name: String!
  project: Project!
  projectId: Int!
}

input ProjectPageWhereUniqueInput {
  id: Int
}

input ProjectWhereUniqueInput {
  id: Int
  id_userId: ProjectIdUserIdCompoundUniqueInput
}

type Query {
  currentUser: User
  myProjects: [Project]
}

type User {
  bio: String
  coins: Int!
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  createdAt: DateTime!
  email: String!
  emailVerified: DateTime
  id: String!
  image: String
  likes(after: LikeWhereUniqueInput, before: LikeWhereUniqueInput, first: Int, last: Int): [Like!]!
  name: String!
  projects(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
}
